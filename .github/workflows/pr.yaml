name: Pull Request CI

on:
  pull_request:
    branches: [main, master]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
      
      - name: Install dependencies
        run: |
          uv pip install --system black linecheck
      
      - name: Check formatting with Black
        run: |
          black . -l 79 --check
      
      - name: Run linecheck
        run: |
          linecheck . --check

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
      
      - name: Install package
        run: |
          uv pip install --system -e .[dev]
      
      - name: Run tests
        run: |
          uv run pytest policyengine_au/tests -v --cov=policyengine_au --cov-report=xml
      
      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.13'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  documentation:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
      
      - name: Install package with docs dependencies
        run: |
          uv pip install --system -e .[dev]
      
      - name: Build documentation
        run: |
          myst build docs -o docs/_build

  yaml-tests:
    name: YAML Policy Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
      
      - name: Install package
        run: |
          uv pip install --system -e .[dev]
      
      - name: Run YAML tests
        run: |
          uv run pytest policyengine_au/tests/policy -v